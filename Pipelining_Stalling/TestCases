TestCases: ($a1 = 1 in all the testcases)

Register updated in previous cycle (2 cycle stall + read after write from registers)

add $a0 $a1 $a2
sub $t0 $a0 $a1

*************************************************************************************************
Register updated in previous to previous cycle (1 cycle stall + read after write from registers)

sub $sp $sp $a1
lw $a0 0 $sp
add $a2 $zero $zero
sw $a0 0 $sp

*************************************************************************************************
Conditional branch instructions (1 cycle stall)

add $a0 $zero $zero
beq $a0 $zero exit
add $a0 $a0 $a1
exit:

*************************************************************************************************
Finding sum of first $a3 numbers: 
$a1 <= 1.

add $a3 $a3 $a1
add $a3 $a3 $a1
add $a3 $a3 $a1
add $a3 $a3 $a1
jal findsum
j exit
findsum:
sub $sp $sp $a1
sub $sp $sp $a1
sw $a0 0 $sp
sw $a3 1 $sp
add $a0 $zero $zero
for:
add $a0 $a0 $a3
sub $a3 $a3 $a1
bne $a3 $zero for
add $v0 $a0 $zero
lw $a3 1 $sp
lw $a0 0 $sp
add $sp $sp $a1
add $sp $sp $a1
jr $ra
exit:

*************************************************************************************************
//Storing first $v1 fibonacci numbers in the momory from (4095..4095 - $v0 + 1)
$a1 <= 1, $at <= 1

label1:
sub $sp $sp $at
sw $a0 0 $sp
sub $sp $sp $at
sw $a1 0 $sp
add $v0 $v0 $at
label2:
add $a2 $a1 $a0
sub $sp $sp $at
sw $a2 0 $sp
lw $a0 1 $sp
lw $a1 0 $sp
add $v0 $v0 $at
beq $v0 $v1 label3
j label2
label3:
